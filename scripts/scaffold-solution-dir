#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const year = '2019';
const solutionDirPath = path.join(__dirname, '..', year);

for (let dayDate = 4; dayDate <= 25; dayDate++) {
  const dayDateDirPath = path.join(
    solutionDirPath,
    dayDate < 10 ? '0' + dayDate.toString() : dayDate.toString()
  );

  const doesDayDateDirExist = fs.existsSync(dayDateDirPath);
  if (!doesDayDateDirExist) fs.mkdirSync(dayDateDirPath);

  const inputFilePath = path.join(
    dayDateDirPath,
    `${year}.${dayDate}.input.js`
  );
  const doesInputFileExist = fs.existsSync(inputFilePath);
  if (!doesInputFileExist) {
    fs.writeFileSync(inputFilePath, `module.exports = '';`);
  }

  for (let problemPortion = 1; problemPortion <= 2; problemPortion++) {
    const problemPortionDirPath = path.join(
      dayDateDirPath,
      problemPortion.toString()
    );

    const doesProblemPortionDirExist = fs.existsSync(problemPortionDirPath);
    if (!doesProblemPortionDirExist) fs.mkdirSync(problemPortionDirPath);

    const solutionFilePath = path.join(
      problemPortionDirPath,
      `${year}.${dayDate}.${problemPortion}.solution.js`
    );
    const doesSolutionFileExist = fs.existsSync(solutionFilePath);
    if (!doesSolutionFileExist) {
      fs.writeFileSync(
        solutionFilePath,
        `const solution = () => {};\n\nmodule.exports = solution;`
      );
    }

    // misspell spec so jest ignores it until I write the test content
    const solutionSpecPath = path.join(
      problemPortionDirPath,
      `${year}.${dayDate}.${problemPortion}.solution.spc.js`
    );
    const doesSolutionSpecFileExist = fs.existsSync(solutionSpecPath);
    if (!doesSolutionSpecFileExist) {
      fs.writeFileSync(
        solutionSpecPath,
        `const solution = require('./${year}.${dayDate}.${problemPortion}.solution.js');
  const input = require('../${year}.${dayDate}.input.js');
  
  describe('${year}.${dayDate}.${problemPortion}.solution', () => {
    it('solves the problem', () => {
      const actual = solution(input);
      console.log(actual);
    });
  });`
      );
    }
  }
}
